// <auto-generated />
using HospitalManagementMVC.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalManagementMVC.Migrations
{
    [DbContext(typeof(PatientDal))]
    [Migration("20200729163702_4676")]
    partial class _4676
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalManagementMVC.Models.Patient", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("PatientList");
                });

            modelBuilder.Entity("HospitalManagementMVC.Models.Problem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("patientProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("patientid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("patientid");

                    b.ToTable("ProblemList");
                });

            modelBuilder.Entity("HospitalManagementMVC.Models.Problem", b =>
                {
                    b.HasOne("HospitalManagementMVC.Models.Patient", "patient")
                        .WithMany("problems")
                        .HasForeignKey("patientid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
